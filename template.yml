AWSTemplateFormatVersion: "2010-09-09"
Description: Catan.gg

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  AcmCertificateArn:
    Type: String
    Description: ACM certificate ARN for the domain
  ContactFormMailTo:
    Type: String
    Description: Email address to send contact form submissions to
  SESIdentityName:
    Type: String
    Description: SES identity name

Resources:
  AssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: catan.gg

  CloudfrontRewriteRequestFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: catan-cloudfront-rewrite-request
      AutoPublish: true
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;

          if (uri.includes('.') && !uri.endsWith('.html')) {
            return request;
          }

          if (uri.endsWith('/')) {
            request.uri += 'index.html';
            return request;
          }

          if (!uri.endsWith('.html')) {
            request.uri += '.html';
            return request;
          }

          return request;
        }
      FunctionConfig:
        Comment: Rewrites sub-directory path with trailing /index.html
        Runtime: cloudfront-js-1.0

  CloudfrontAddCacheControlFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: catan-cloudfront-add-cache-control
      AutoPublish: true
      FunctionCode: |
        function handler(event) {
          var response = event.response;
          var headers = response.headers;

          headers['cache-control'] = {value: 'public, max-age=604800, must-revalidate'};

          return response;
        }
      FunctionConfig:
        Comment: Add cache control header to viewer-response
        Runtime: cloudfront-js-1.0

  CloudfrontAddImmutableCacheControlFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: catan-cloudfront-add-immutable-cache-control
      AutoPublish: true
      FunctionCode: |
        function handler(event) {
          var response = event.response;
          var headers = response.headers;

          headers['cache-control'] = {value: 'public, max-age=31536000, immutable'};

          return response;
        }
      FunctionConfig:
        Comment: Add immutable cache control header to viewer-response
        Runtime: cloudfront-js-1.0

  Cloudfront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_100
        Comment: Catan.gg
        Origins:
          - DomainName: !Sub ${AssetsBucket}.s3.${AWS::Region}.amazonaws.com
            Id: AssetsBucket
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudfrontOAI}
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed-CachingOptimized
          # CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # Managed-CachingDisabled
          TargetOriginId: AssetsBucket
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt CloudfrontRewriteRequestFunction.FunctionMetadata.FunctionARN
        CacheBehaviors:
          - PathPattern: _next/static/*
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            TargetOriginId: AssetsBucket
            FunctionAssociations:
              - EventType: viewer-response
                FunctionARN: !GetAtt CloudfrontAddImmutableCacheControlFunction.FunctionMetadata.FunctionARN
          - PathPattern: images/*
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            TargetOriginId: AssetsBucket
            FunctionAssociations:
              - EventType: viewer-response
                FunctionARN: !GetAtt CloudfrontAddCacheControlFunction.FunctionMetadata.FunctionARN
        Aliases:
          - catan.gg
          - www.catan.gg
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 404
            ResponsePagePath: /404.html

  CloudfrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "Access to ${AssetsBucket}"

  AssetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AssetsBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub ${AssetsBucket.Arn}/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudfrontOAI}

  FeedbackLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs16.x
      Environment:
        Variables:
          MAIL_TO: !Ref ContactFormMailTo
      Policies:
        - SESCrudPolicy:
            IdentityName: !Ref SESIdentityName
      InlineCode: |
        const aws = require("aws-sdk");
        const ses = new aws.SES();

        exports.handler = async function (event) {
          console.info("Event: ", event);

          const body = JSON.parse(event.body);

          var params = {
            Source: process.env.MAIL_TO,
            Destination: {
              ToAddresses: [process.env.MAIL_TO],
            },
            Message: {
              Subject: { Data: "Catan.gg: Feedback" },
              Body: {
                Html: {
                  Charset: "UTF-8",
                  Data: `<div>Rating: ${body.rating}/5</div><div>Message: ${body.message || '-'}</div>`
                },
              },
            },
          };

          await ses.sendEmail(params).promise();

          return {
            statusCode: 200,
            body: JSON.stringify({ message: "Feedback sent" }),
          };
        };
      Events:
        Api:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: POST
            Path: /feedback

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - https://catan.gg
          - https://www.catan.gg
          - http://locahost:3000
        AllowHeaders: "'*'"
        AllowMethods: "'*'"
      DefaultRouteSettings:
        ThrottlingBurstLimit: 100
        ThrottlingRateLimit: 100
      Domain:
        CertificateArn: !Ref AcmCertificateArn
        DomainName: api.catan.gg
        Route53:
          HostedZoneId: Z102382124RMS32KT5GB3
          HostedZoneName: catan.gg
